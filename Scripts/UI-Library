local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local UILibrary = {}

function UILibrary.Load(title)
	local UILib = {}

	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = title
	ScreenGui.ResetOnSpawn = false
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	ScreenGui.Parent = game:GetService("CoreGui")

	local MainFrame = Instance.new("Frame")
	MainFrame.Name = "MainFrame"
	MainFrame.Size = UDim2.new(0, 450, 0, 300)
	MainFrame.Position = UDim2.new(0.5, -225, 0.5, -150)
	MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	MainFrame.BorderSizePixel = 0
	MainFrame.Parent = ScreenGui

	local Title = Instance.new("TextLabel")
	Title.Name = "Title"
	Title.Size = UDim2.new(1, 0, 0, 40)
	Title.BackgroundTransparency = 1
	Title.Text = title
	Title.Font = Enum.Font.GothamBold
	Title.TextSize = 22
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.Parent = MainFrame

	-- DRAG SYSTEM FIXED
	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
									   startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	MainFrame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = MainFrame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	MainFrame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	RunService.RenderStepped:Connect(function()
		if dragging and dragInput then
			update(dragInput)
		end
	end)

	-- Pages container
	local Pages = Instance.new("Folder")
	Pages.Name = "Pages"
	Pages.Parent = MainFrame

	function UILib.AddPage(name)
		local Page = Instance.new("Frame")
		Page.Name = name
		Page.Size = UDim2.new(1, 0, 1, -40)
		Page.Position = UDim2.new(0, 0, 0, 40)
		Page.BackgroundTransparency = 1
		Page.Parent = Pages

		local UIList = Instance.new("UIListLayout")
		UIList.Padding = UDim.new(0, 5)
		UIList.SortOrder = Enum.SortOrder.LayoutOrder
		UIList.Parent = Page

		local PageLib = {}

		function PageLib.AddLabel(text)
			local Label = Instance.new("TextLabel")
			Label.Size = UDim2.new(1, -10, 0, 30)
			Label.Position = UDim2.new(0, 5, 0, 0)
			Label.BackgroundTransparency = 1
			Label.Text = text
			Label.Font = Enum.Font.Gotham
			Label.TextSize = 18
			Label.TextColor3 = Color3.fromRGB(255, 255, 255)
			Label.TextXAlignment = Enum.TextXAlignment.Left
			Label.Parent = Page
			return Label
		end

		function PageLib.AddButton(text, callback)
			local Button = Instance.new("TextButton")
			Button.Size = UDim2.new(1, -10, 0, 30)
			Button.Position = UDim2.new(0, 5, 0, 0)
			Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			Button.Text = text
			Button.Font = Enum.Font.Gotham
			Button.TextSize = 18
			Button.TextColor3 = Color3.fromRGB(255, 255, 255)
			Button.Parent = Page

			Button.MouseButton1Click:Connect(function()
				pcall(callback)
			end)

			return Button
		end

		function PageLib.AddToggle(text, default, callback)
			local Toggle = Instance.new("TextButton")
			Toggle.Size = UDim2.new(1, -10, 0, 30)
			Toggle.Position = UDim2.new(0, 5, 0, 0)
			Toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			Toggle.Text = text .. ": " .. tostring(default)
			Toggle.Font = Enum.Font.Gotham
			Toggle.TextSize = 18
			Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
			Toggle.Parent = Page

			local state = default

			Toggle.MouseButton1Click:Connect(function()
				state = not state
				Toggle.Text = text .. ": " .. tostring(state)
				pcall(callback, state)
			end)

			return Toggle
		end

		function PageLib.AddSlider(text, options, callback)
			local Slider = Instance.new("TextButton")
			Slider.Size = UDim2.new(1, -10, 0, 30)
			Slider.Position = UDim2.new(0, 5, 0, 0)
			Slider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			Slider.Text = text .. ": " .. tostring(options.Def)
			Slider.Font = Enum.Font.Gotham
			Slider.TextSize = 18
			Slider.TextColor3 = Color3.fromRGB(255, 255, 255)
			Slider.Parent = Page

			local value = options.Def or 0

			Slider.MouseButton1Click:Connect(function()
				value = value + 1
				if value > options.Max then value = options.Min end
				Slider.Text = text .. ": " .. tostring(value)
				pcall(callback, value)
			end)

			return Slider
		end

		function PageLib.AddColourPicker(text, default, callback)
			local Picker = Instance.new("TextButton")
			Picker.Size = UDim2.new(1, -10, 0, 30)
			Picker.Position = UDim2.new(0, 5, 0, 0)
			Picker.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			Picker.Text = text .. ": " .. default
			Picker.Font = Enum.Font.Gotham
			Picker.TextSize = 18
			Picker.TextColor3 = Color3.fromRGB(255, 255, 255)
			Picker.Parent = Page

			Picker.MouseButton1Click:Connect(function()
				pcall(callback, default)
			end)

			return Picker
		end

		function PageLib.AddDropdown(text, list, callback)
			local Dropdown = Instance.new("TextButton")
			Dropdown.Size = UDim2.new(1, -10, 0, 30)
			Dropdown.Position = UDim2.new(0, 5, 0, 0)
			Dropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			Dropdown.Text = text .. ": (Click)"
			Dropdown.Font = Enum.Font.Gotham
			Dropdown.TextSize = 18
			Dropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
			Dropdown.Parent = Page

			local index = 1

			Dropdown.MouseButton1Click:Connect(function()
				index = index + 1
				if index > #list then index = 1 end
				Dropdown.Text = text .. ": " .. list[index]
				pcall(callback, list[index])
			end)

			return Dropdown
		end

		return PageLib
	end

	return UILib
end

return UILibrary
